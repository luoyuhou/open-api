generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id     String    @unique(map: "user_id") @db.VarChar(64)
  status      Int       @db.TinyInt
  first_name  String    @db.VarChar(32)
  last_name   String    @db.VarChar(32)
  email       String?   @db.VarChar(64)
  phone       String    @unique(map: "phone") @db.VarChar(16)
  avatar      String?   @db.VarChar(256)
  create_date DateTime? @default(now()) @db.DateTime(0)
  update_date DateTime? @default(now()) @db.DateTime(0)
}

model user_signin_history {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id     String    @db.VarChar(64)
  ip          String?   @db.VarChar(64)
  useragent   String?   @db.VarChar(256)
  source      Int       @db.TinyInt
  create_date DateTime? @default(now()) @db.DateTime(0)
  update_date DateTime? @default(now()) @db.DateTime(0)

  @@index([create_date], map: "user_signIn_history_createDate_idx")
  @@index([user_id], map: "user_signIn_history_userId_idx")
}

model user_signin_password {
  id                 Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id            String    @unique(map: "user_id") @db.VarChar(64)
  salt               String    @db.VarChar(32)
  password           String    @db.VarChar(64)
  failed_login_times Int       @default(0) @db.UnsignedTinyInt
  locked_date        DateTime? @db.DateTime(0)
  create_date        DateTime? @default(now()) @db.DateTime(0)
  update_date        DateTime? @default(now()) @db.DateTime(0)
}

model store {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  store_id    String    @unique(map: "store_id") @db.VarChar(64)
  id_code     String    @db.VarChar(32)
  id_name     String    @db.VarChar(32)
  user_id     String    @db.VarChar(64)
  store_name  String    @db.VarChar(64)
  phone       String    @db.VarChar(11)
  province    String    @db.VarChar(8)
  city        String    @db.VarChar(8)
  area        String    @db.VarChar(8)
  town        String    @db.VarChar(8)
  address     String    @db.VarChar(128)
  status      Int       @default(0) @db.TinyInt
  create_date DateTime? @default(now()) @db.DateTime(0)
  update_date DateTime? @default(now()) @db.DateTime(0)

  @@index([store_name], map: "store_name_idx")
  @@index([user_id], map: "store_user_idx")
}

model store_history {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  store_id       String    @db.VarChar(64)
  action_type    Int       @db.UnsignedTinyInt
  action_content String    @db.VarChar(256)
  payload        String?   @db.VarChar(1024)
  action_user_id String    @db.VarChar(64)
  action_date    DateTime  @db.DateTime(0)
  create_date    DateTime? @default(now()) @db.DateTime(0)
  update_date    DateTime? @default(now()) @db.DateTime(0)

  @@index([action_type], map: "store_action_type_idx")
  @@index([store_id], map: "store_history_idx")
}

model user_address {
  id              Int       @id @default(autoincrement()) @db.UnsignedInt
  user_address_id String    @unique(map: "user_address_id") @db.VarChar(64)
  user_id         String    @db.VarChar(64)
  recipient       String    @db.VarChar(64)
  phone           String    @db.VarChar(16)
  province        String    @db.VarChar(8)
  city            String    @db.VarChar(8)
  area            String    @db.VarChar(8)
  town            String    @db.VarChar(8)
  address         String    @db.VarChar(128)
  is_default      Boolean   @default(false)
  tag             String?   @db.VarChar(8)
  status          Boolean   @default(true)
  create_date     DateTime? @default(now()) @db.DateTime(0)
  update_date     DateTime? @default(now()) @db.DateTime(0)

  @@index([user_id], map: "user_address_user_idx")
}

model category_goods {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  category_id String    @unique(map: "category_id") @db.VarChar(64)
  store_id    String    @db.VarChar(64)
  pid         String?   @db.VarChar(64)
  rank        Int       @default(0) @db.TinyInt
  name        String    @db.VarChar(16)
  status      Int       @db.TinyInt
  create_date DateTime? @default(now()) @db.DateTime(0)
  update_date DateTime? @default(now()) @db.DateTime(0)

  @@unique([store_id, name], map: "store_id")
  @@index([store_id, pid], map: "category_goods_idx")
  @@index([name], map: "category_goods_name")
}

model store_goods {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  goods_id    String    @unique(map: "goods_id") @db.VarChar(64)
  store_id    String    @db.VarChar(64)
  category_id String    @db.VarChar(64)
  name        String    @db.VarChar(16)
  description String?   @db.VarChar(256)
  status      Int       @db.TinyInt
  create_date DateTime? @default(now()) @db.DateTime(0)
  update_date DateTime? @default(now()) @db.DateTime(0)

  @@unique([store_id, category_id, name], map: "store_id")
  @@index([name], map: "goods_name_idx")
  @@index([store_id], map: "store_idx")
}

model store_goods_version {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  version_id     String    @unique(map: "version_id") @db.VarChar(64)
  goods_id       String    @db.VarChar(64)
  version_number String?   @db.VarChar(32)
  bar_code       String?   @db.VarChar(32)
  count          Int       @db.UnsignedInt
  price          Int       @db.UnsignedInt
  unit_name      String    @db.VarChar(8)
  supplier       String?   @db.VarChar(64)
  status         Int       @db.TinyInt
  create_date    DateTime? @default(now()) @db.DateTime(0)
  update_date    DateTime? @default(now()) @db.DateTime(0)

  @@unique([goods_id, unit_name, version_number], map: "goods_id")
  @@unique([goods_id, unit_name, bar_code], map: "goods_id_2")
  @@index([bar_code], map: "goods_bar_code_idx")
  @@index([goods_id], map: "goods_idx")
  @@index([supplier], map: "goods_suppler_idx")
  @@index([version_number], map: "goods_version_number_idx")
}

model user_order {
  id            Int       @id @default(autoincrement()) @db.UnsignedInt
  order_id      String    @unique(map: "order_id") @db.VarChar(64)
  user_id       String    @db.VarChar(64)
  store_id      String    @db.VarChar(64)
  status        Int       @db.TinyInt
  stage         Int       @db.TinyInt
  recipient     String    @db.VarChar(16)
  money         Int       @db.UnsignedInt
  phone         String    @db.VarChar(16)
  province      String    @db.VarChar(8)
  city          String    @db.VarChar(8)
  area          String    @db.VarChar(8)
  town          String    @db.VarChar(8)
  address       String    @db.VarChar(128)
  delivery_date DateTime  @db.DateTime(0)
  create_date   DateTime? @default(now()) @db.DateTime(0)
  update_date   DateTime? @default(now()) @db.DateTime(0)

  @@index([user_id, store_id], map: "user_order_idx")
  @@index([store_id], map: "user_order_store_idx")
  @@index([user_id], map: "user_order_user_idx")
}

model user_order_info {
  id               Int       @id @default(autoincrement()) @db.UnsignedInt
  order_info_id    String    @unique(map: "order_info_id") @db.VarChar(64)
  order_id         String    @db.VarChar(64)
  goods_id         String    @db.VarChar(64)
  goods_name       String    @db.VarChar(16)
  goods_version_id String    @db.VarChar(64)
  count            Int       @db.UnsignedInt
  price            Int       @db.UnsignedInt
  create_date      DateTime? @default(now()) @db.DateTime(0)
  update_date      DateTime? @default(now()) @db.DateTime(0)

  @@index([order_id], map: "order_Info_order_idx")
  @@index([goods_id], map: "order_info_goods_idx")
}

model user_order_action {
  id              Int       @id @default(autoincrement()) @db.UnsignedInt
  order_action_id String    @unique(map: "order_action_id") @db.VarChar(64)
  user_id         String    @db.VarChar(64)
  order_id        String    @db.VarChar(64)
  status          Int       @db.TinyInt
  create_date     DateTime? @default(now()) @db.DateTime(0)
  update_date     DateTime? @default(now()) @db.DateTime(0)

  @@index([order_id], map: "order_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model province {
  id       Int    @id @default(autoincrement()) @db.UnsignedInt
  code     String @db.VarChar(8)
  name     String @db.VarChar(32)
  province String @db.VarChar(8)
  city     String @db.VarChar(8)
  area     String @db.VarChar(8)
  town     String @db.VarChar(8)

  @@index([city], map: "city_idx")
  @@index([code], map: "code_idx")
  @@index([province, city, area], map: "province_idx")
}

model store_apply {
  id                Int       @id @default(autoincrement()) @db.UnsignedInt
  store_id          String    @db.VarChar(64)
  type              Int       @db.UnsignedTinyInt
  applicant_user_id String    @db.VarChar(64)
  applicant_date    DateTime  @db.DateTime(0)
  applicant_summary String    @db.VarChar(128)
  applicant_content String    @db.VarChar(1024)
  status            Int       @default(0) @db.TinyInt
  replient_user_id  String?   @db.VarChar(64)
  replient_date     DateTime? @db.DateTime(0)
  replient_content  String?   @db.VarChar(256)
  create_date       DateTime? @default(now()) @db.DateTime(0)
  update_date       DateTime? @default(now()) @db.DateTime(0)

  @@index([store_id], map: "store_apply_idx")
  @@index([type])
}

model auth {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  pid         String    @default("0") @db.VarChar(64)
  auth_id     String    @unique(map: "auth_id") @db.VarChar(64)
  side        Int       @db.UnsignedTinyInt
  path        String    @db.VarChar(64)
  method      String?   @db.VarChar(8)
  status      Int       @db.TinyInt
  create_date DateTime? @default(now()) @db.DateTime(0)
  update_date DateTime? @default(now()) @db.DateTime(0)

  @@unique([side, path], map: "auth_idx")
  @@index([pid])
  @@index([side])
}

model role {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  role_id     String    @unique(map: "role_id") @db.VarChar(64)
  role_name   String    @unique(map: "role_name") @db.VarChar(16)
  description String?   @db.VarChar(1024)
  create_date DateTime? @default(now()) @db.DateTime(0)
  update_date DateTime? @default(now()) @db.DateTime(0)
}

model role_auth {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  auth_id     String    @db.VarChar(64)
  role_id     String    @db.VarChar(64)
  status      Int       @db.TinyInt
  create_date DateTime? @default(now()) @db.DateTime(0)
  update_date DateTime? @default(now()) @db.DateTime(0)

  @@unique([role_id, auth_id], map: "role_id")
  @@index([auth_id], map: "auth_idx")
}

model user_auth {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id     String    @unique(map: "user_id") @db.VarChar(64)
  is_admin    Boolean
  status      Int       @db.TinyInt
  create_date DateTime? @default(now()) @db.DateTime(0)
  update_date DateTime? @default(now()) @db.DateTime(0)
}

model user_role {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  role_id     String    @db.VarChar(64)
  user_id     String    @db.VarChar(64)
  status      Int       @db.TinyInt
  create_date DateTime? @default(now()) @db.DateTime(0)
  update_date DateTime? @default(now()) @db.DateTime(0)

  @@unique([user_id, role_id], map: "user_id")
  @@index([role_id], map: "role_idx")
}

model user_signin_wechat {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  openid      String    @unique(map: "openid") @db.VarChar(64)
  user_id     String    @unique(map: "user_id") @db.VarChar(64)
  create_date DateTime? @default(now()) @db.DateTime(0)
  update_date DateTime? @default(now()) @db.DateTime(0)
}

model auth_role {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  auth_id     String    @db.VarChar(64)
  role_id     String    @db.VarChar(64)
  status      Int       @db.TinyInt
  create_date DateTime? @default(now()) @db.DateTime(0)
  update_date DateTime? @default(now()) @db.DateTime(0)

  @@unique([role_id, auth_id], map: "role_id")
  @@index([auth_id], map: "auth_idx")
}
